<?xml version="1.0" encoding="UTF-8"?>
<!--http://docs.spring.io/spring/docs/4.1.7.RELEASE/spring-framework-reference/html/beans.html#beans-factory-metadata-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--convention over configuration,约定大于配置-->
    <!--整合mybatis-->
    <!--1.db params-->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties"/>
    <!--2.db pool-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="maxPoolSize" value="30"/>-->
        <!--<property name="minPoolSize" value="10"/>-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--<property name="checkoutTimeout" value="1000"/>-->
        <!--<property name="acquireRetryAttempts" value="2"/>-->
    <!--</bean>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--数据源驱动类可不写,Druid默认会自动根据URL识别DriverClass-->
        <!--<property name="driverClassName" value="${jdbc.driver}"/>-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="initialSize" value="${jdbc.pool.init}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>

        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="30000"/>

        <property name="validationQuery" value="${jdbc.testSql}"/>
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="filters" value="stat" />
    </bean>
    <!--3.sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--inject db pool-->
        <property name="dataSource" ref="dataSource"/>
        <!--mybatis global config-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--scan entity package,使用别名,多个包的时候使用逗号分隔即可-->
        <property name="typeAliasesPackage" value="io.github.consoles.entity"/>
        <!--scan sql config,mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--4.配置扫描dao接口包,动态实现dao接口,并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- inject sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描dao接口包-->
        <property name="basePackage" value="io.github.consoles.dao"/>
    </bean>
    <!--redis dao-->
    <bean id="redisDao" class="io.github.consoles.dao.cache.RedisDao">
        <constructor-arg name="ip" value="${redis.ip}"/>
        <constructor-arg name="port" value="${redis.port}"/>
    </bean>
</beans>
